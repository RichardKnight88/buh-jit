{"version":3,"sources":["components/auth/helpers/loginForm.js","components/auth/helpers/loginToast.js","components/auth/helpers/tokenfunctions.js","components/Navbar.js","styles/elementStyles.js","components/auth/Profile.js","components/auth/Register.js","components/TransactionForm.js","components/EditTransactionForm.js","components/TransactionDetail.js","components/DoughnutChart.js","components/Dashboard.js","images/dashboardScreenshot.png","components/Home.js","App.js","index.js"],"names":["LoginForm","useState","email","password","formData","setFormData","history","useHistory","location","useLocation","handleChange","event","a","newFormData","target","name","value","handleSubmit","preventDefault","axios","post","data","setTokenToLocalStorage","token","username","push","pathname","console","log","response","statusText","window","localStorage","setItem","Form","onSubmit","Group","className","controlId","Label","Control","type","placeholder","onChange","Button","variant","LoginToast","OverlayTrigger","trigger","placement","overlay","Popover","id","Header","as","Body","Nav","Item","style","color","cursor","getTokenFromLocalStorage","getItem","getPayload","splitToken","split","length","JSON","parse","atob","getCurrentUser","payload","get","headers","Authorization","getIndividualTransaction","transactionId","deleteTransaction","delete","editTransaction","dataToSubmit","put","transformDate","dateInfo","Date","NavbarComponent","setUsername","Navbar","expand","backgroundColor","Container","Brand","href","Toggle","Collapse","Math","round","now","exp","checkUserIsAuthenticated","Link","NavDropdown","title","onClick","removeItem","Profile","Register","showToast","setShowToast","first_name","last_name","password_confirmation","message","reset","ToastContainer","position","Toast","top","onClose","show","delay","autohide","required","Row","Col","TransactionForm","rerender","repeatStatus","setRepeatStatus","showModal","setShowModal","transaction_type","amount","recipient_sender","label","description","repeat","repeat_frequency","repeat_until","transaction_date","transaction_day","skipped_months","useEffect","checked","clearForm","setTimeout","clearingForm","hide","props","Tooltip","Modal","onHide","backdrop","closeButton","Title","Select","defaultValue","map","item","index","Check","EditTransactionForm","transaction","hiddenToggles","TransactionDetail","handleClose","showTransactionDetail","rerenderToggle","setTransaction","editHidden","setEditHidden","cardHidden","setCardHidden","transactionData","accessTransaction","Card","xs","sm","ListGroup","ListGroupItem","toDateString","Footer","DoughnutChart","transactions","outgoingTransactionsProps","labelsArray","setLabelsArray","uniqueValues","indexOf","values","total","labels","datasets","borderColor","borderWidth","Dashboard","currentUser","setCurrentUser","displayMonth","setDisplayMonth","displayYear","setDisplayYear","monthlyTransactions","setMonthlyTransaction","monthlyOutgoingTransactions","setMonthlyOutgoingTransaction","monthlyIncomingTransactions","setMonthlyIncomingTransaction","monthlyIncomingSum","setMonthlyIncomingSum","monthlyOutgoingSum","setMonthlyOutgoingSum","setShowTransactionDetail","setTransactionId","setRerenderToggle","currentDate","currentMonth","getMonth","currentUserData","getCurrentUserData","getFullYear","filteredMonthTransactions","filter","sort","b","getDate","outgoingTransactions","incomingTransactions","getMonthlyTransactions","getTotals","variableToMap","reduce","acc","tableRowFill","checkClick","idAsString","outerHTML","toString","replace","idAsInt","parseInt","handleShow","md","lg","abs","toFixed","Table","bordered","responsive","hover","colSpan","Home","screenshot","dashboardScreenshot","Img","src","alt","Text","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2e93063.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\n// import { handleChange } from './formFunctions'\n\n\n\nconst LoginForm = () => {\n\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  })\n\n  const history = useHistory()\n  const location = useLocation()\n\n  const handleChange = async (event) => {\n    // console.log('EVENT', event.target.name, 'VALUE', event.target.value)\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n\n  }\n\n  // console.log('LOCATION', location)\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const { data } = await axios.post('/api/auth/login/', formData )\n      // console.log('DATA', data)\n\n      setTokenToLocalStorage(data.token, data.username)\n\n      history.push('/dashboard')\n      location.pathname\n      console.log(data)\n\n    } catch (err) {\n      console.log(err.response.statusText)\n      // setErrors(err.response.data.message)\n    }\n  }\n\n\n  const setTokenToLocalStorage = (token, username) => {\n    window.localStorage.setItem('token', token)\n    window.localStorage.setItem('username', username)\n  }\n\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          onChange={handleChange}\n          value={formData.email}\n        />\n        {/* <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text> */}\n      </Form.Group>\n\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={handleChange}\n          value={formData.password} />\n      </Form.Group>\n      <div className=\"d-grid gap-2\">\n        <Button variant=\"outline-primary\" type=\"submit\">\n          Login\n        </Button>\n      </div>\n    </Form>\n  )\n}\n\nexport default LoginForm","import React from 'react'\nimport { OverlayTrigger, Popover, Nav } from 'react-bootstrap'\nimport LoginForm from './loginForm'\n\n\nconst LoginToast = () => {\n\n\n\n  return (\n    <>\n      <OverlayTrigger\n        trigger=\"click\"\n        placement=\"bottom\"\n        overlay={<Popover id=\"popover-basic\" >\n          <Popover.Header as=\"h3\">Login</Popover.Header>\n          <Popover.Body>\n            <LoginForm />\n          </Popover.Body>\n        </Popover >}\n      >\n        <Nav.Item\n          variant=\"dark\"\n          style={{\n            color: '#fff',\n            cursor: 'pointer',\n          }}\n        >LOGIN</Nav.Item>\n      </OverlayTrigger>\n\n    </>\n  )\n}\n\nexport default LoginToast","import axios from 'axios'\n\nexport const getTokenFromLocalStorage = () => {\n  return window.localStorage.getItem('token')\n}\n\nexport const getUsernameFromLocalStorage = () => {\n  return window.localStorage.getItem('username')\n}\n\n\nexport const getPayload = () => {\n  const token = getTokenFromLocalStorage()\n\n  if (!token) return\n\n  const splitToken = token.split('.')\n  if (splitToken.length < 3) return\n  return JSON.parse(atob(splitToken[1]))\n\n}\n\nexport const getCurrentUser = async () => {\n\n  const payload = getPayload()\n  console.log('PAYLOAD')\n\n  if (!payload) return\n\n  // const currentUserId = payload.sub\n  // console.log(currentUserId)\n\n  const { data } = await axios.get('/api/auth/profile/',\n    {\n      headers: {\n        Authorization: `Bearer ${getTokenFromLocalStorage()}`,\n      },\n    }\n  )\n  // console.log('GET REQ', data.transactions.length)\n  // console.log('GET REQ ONLY')\n\n  return data\n\n}\n\n\nexport const getIndividualTransaction = async (transactionId) => {\n\n  try {\n\n    const { data } = await axios.get(`/api/transactions/${transactionId}/`,\n      {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`,\n        },\n      }\n    )\n\n    console.log('DATA', data)\n    return data\n\n  } catch (err) {\n    console.log('Something has gone wrong', err)\n  }\n\n}\n\n\nexport const deleteTransaction = async (transactionId) => {\n\n  try {\n    await axios.delete(`/api/transactions/${transactionId}/`, \n      {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`,\n        },\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\nexport const editTransaction = async (transactionId, dataToSubmit) => {\n\n  try {\n    await axios.put(`/api/transactions/${transactionId}/`, dataToSubmit,\n      {\n        headers: {\n          Authorization: `Bearer ${getTokenFromLocalStorage()}`,\n        },\n      }\n    )\n  } catch (err) {\n    console.log(err)\n  }\n}\n\n\nexport const transformDate = (dateInfo) => {\n  return new Date(dateInfo)\n}","import React, { useState } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Navbar, Container, Nav, NavDropdown } from 'react-bootstrap'\nimport { primaryColor } from '../styles/elementStyles'\nimport LoginToast from './auth/helpers/loginToast'\nimport { getPayload, getUsernameFromLocalStorage } from './auth/helpers/tokenfunctions'\n// import axios from 'axios'\n\n\nconst NavbarComponent = () => {\n\n\n  const [username, setUsername] = useState(null)\n\n  const history = useHistory()\n  const location = useLocation()\n\n\n  const checkUserIsAuthenticated = () => {\n\n    const payload = getPayload()\n\n    if (!payload) return\n    if (!username) setUsername(getUsernameFromLocalStorage())\n\n    const currentTime = Math.round(Date.now() / 1000)\n\n    return currentTime - payload.exp\n\n  }\n\n\n\n  const handleLogout = () => {\n\n    window.localStorage.removeItem('token')\n    window.localStorage.removeItem('username')\n    history.push('/')\n    location.pathname\n    setUsername(null)\n  }\n\n\n\n  return (\n    <Navbar variant=\"dark\" expand=\"lg\" style={{\n      backgroundColor: primaryColor,\n    }}>\n      <Container>\n        <Navbar.Brand href=\"/\">\n          <i className=\"fas fa-search-dollar\"></i>\n          Buh-Jit\n        </Navbar.Brand>\n\n\n        <Navbar.Toggle\n          aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {!checkUserIsAuthenticated() ?\n              <LoginToast />\n              :\n              <>\n                {/* <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link> */}\n\n                <Nav.Link href=\"/dashboard\" className=\"justify-content-start\">Dashboard</Nav.Link>\n\n                <NavDropdown title={`Logged in as ${username}`} id=\"basic-nav-dropdown\">\n                  {/* <NavDropdown.Item href=\"/profile\">Profile</NavDropdown.Item> */}\n\n                  {/* <NavDropdown.Divider /> */}\n\n                  <NavDropdown.Item\n                    onClick={handleLogout}>\n                    Log Out\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </>\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavbarComponent","export const primaryColor = '#6200a3'","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nconst Profile = () => {\n\n  const history = useHistory()\n  console.log(history)\n\n\n  return (\n    <h2>PROFILE</h2>\n  )\n}\n\nexport default Profile","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Form, Button, Row, Col, Container, Toast, ToastContainer } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Register = () => {\n\n\n  const [showToast, setShowToast] = useState(false)\n\n\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    first_name: '',\n    last_name: '',\n    password: '',\n    password_confirmation: '',\n  })\n\n  const history = useHistory()\n\n\n  const handleChange = async (event) => {\n    // console.log('EVENT', event.target.name, 'VALUE', event.target.value)\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n\n  }\n\n\n  const clearForm = () => {\n\n    const clearingForm = {\n      username: '',\n      email: '',\n      first_name: '',\n      last_name: '',\n      password: '',\n      password_confirmation: '',\n    }\n\n    setFormData(clearingForm)\n  }\n\n\n  const registrationToast = () => {\n    setShowToast(true)\n  }\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const { data } = await axios.post('/api/auth/register/', formData)\n      // console.log('DATA', data)\n      // window.localStorage.setItem('token', data.token)\n      history.push('/')\n\n      console.log(data.message)\n\n      event.target.reset()\n      clearForm()\n      registrationToast()\n\n    } catch (err) {\n      console.log(err)\n      // setErrors(err.response.data.message)\n    }\n  }\n\n\n  return (\n\n    <div className=\"formDiv homeRegistration\">\n      <Container>\n\n        <Form onSubmit={handleSubmit}>\n\n          <ToastContainer position=\"middle-center\">\n            <Toast\n              style={{\n                backgroundColor: '#b3ffb3',\n                top: '56px',\n              }}\n              onClose={() => setShowToast(false)}\n              show={showToast}\n              delay={2000}\n              autohide>\n              <Toast.Body>\n                <strong>Registration Successful. Login up there ⬆︎</strong>\n              </Toast.Body>\n            </Toast>\n          </ToastContainer>\n          <div className=\"registrationFormHeading\">\n            <h2>Sign up!</h2>\n          </div>\n\n          <Form.Group className=\"mb-3 pt-4\" controlId=\"formBasicUsername\">\n            <Form.Label>Create a Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              placeholder=\"Enter Username\"\n              onChange={handleChange}\n              value={formData.username}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n              value={formData.email}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Your Name</Form.Label>\n            <Row>\n              <Col>\n                <Form.Control\n                  id=\"formBasicFirstName\"\n                  type=\"text\"\n                  name=\"first_name\"\n                  placeholder=\"First name\"\n                  onChange={handleChange}\n                  value={formData.first_name}\n                  required\n                />\n              </Col>\n              <Col>\n                <Form.Control\n                  id=\"formBasicLastName\"\n                  type=\"text\"\n                  name=\"last_name\"\n                  placeholder=\"Last name\"\n                  onChange={handleChange}\n                  value={formData.last_name}\n                  required\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              value={formData.password}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPasswordConfirmation\">\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password_confirmation\"\n              placeholder=\"Password Confirmation\"\n              onChange={handleChange}\n              value={formData.password_confirmation}\n              required\n            />\n          </Form.Group>\n\n          <div className=\"d-grid gap-2 pb-4\">\n            <Button variant=\"outline-primary\" type=\"submit\">\n              Register\n            </Button>\n          </div>\n        </Form>\n      </Container>\n    </div>\n  )\n}\n\nexport default Register","import React, { useEffect, useState } from 'react'\nimport { Form, Row, Col, Button, Container, Modal, Toast, ToastContainer, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport axios from 'axios'\nimport { getTokenFromLocalStorage } from './auth/helpers/tokenfunctions'\n\n\n\nconst TransactionForm = ({ rerender }) => {\n\n\n  const history = useHistory()\n\n  const [repeatStatus, setRepeatStatus] = useState(false)\n\n  const [showModal, setShowModal] = useState(false)\n\n  const [showToast, setShowToast] = useState(false)\n\n  const [formData, setFormData] = useState({\n    transaction_type: 'Outgoing',\n    amount: '',\n    recipient_sender: '',\n    label: 'None',\n    description: '',\n    repeat: false,\n    repeat_frequency: '',\n    repeat_until: '',\n    transaction_date: '',\n    transaction_day: 0,\n    skipped_months: '',\n    // owner: currentUser.id,\n  })\n\n\n  const transactionTypes = ['Outgoing', 'Incoming']\n\n  const labels = ['Salary', 'Groceries', 'Clothes', 'Beauty', 'Eating Out', 'Refund', 'Other', 'Rent', 'Mortgage', 'Car', 'Transport']\n\n  const repeatFrequency = ['Daily', 'Every Week', 'Every 2 Weeks', 'Every 4 Weeks', 'Monthly', 'Quarterly', 'Annually']\n\n\n\n  useEffect(() => {\n    console.log('REPEAT STATUS', repeatStatus)\n  }, [repeatStatus])\n\n  // console.log('USER AS PROPS', currentUser)\n\n  const handleChange = async (event) => {\n    console.log('EVENT', event, 'TARGET', event.target)\n    console.log('EVENT TARGET', event.target, 'VALUE', event.target)\n\n    if (event.target && event.target.name === 'repeat') {\n      event.target.value = event.target.checked\n      const newRepeatStatus = !repeatStatus\n      setRepeatStatus(newRepeatStatus)\n    }\n\n    // if (Array.isArray(event)) {\n    //   event.target.name = 'recipient_sender'\n    //   event.target.value = event[0].label\n    // }\n\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    setFormData(newFormData)\n  }\n\n  useEffect(() => {\n    console.log('FORM DATA', formData)\n  }, [formData])\n\n  const handleSubmit = async (event) => {\n    event.preventDefault()\n    // console.log('EVENT', event.target)\n    // console.log('REPEAT', formData.repeat)\n\n    try {\n      await axios.post('/api/transactions/', formData,\n        {\n          headers: {\n            Authorization: `Bearer ${getTokenFromLocalStorage()}`,\n          },\n        })\n\n      history.push('/dashboard')\n\n      setShowToast(true)\n\n      event.target.reset()\n      clearForm()\n\n      setTimeout(() => {\n        rerender()\n      },500)\n\n    } catch (err) {\n      console.log(err)\n      // setErrors(err.response.data.message)\n    }\n\n  }\n\n  const clearForm = () => {\n\n    const clearingForm = {\n      ...formData,\n      transaction_type: 'Outgoing',\n      amount: '',\n      recipient_sender: '',\n      label: 'None',\n      description: '',\n      repeat: false,\n      repeat_frequency: '',\n      repeat_until: '',\n      transaction_date: '',\n      transaction_day: 0,\n      skipped_months: '',\n    }\n    setFormData(clearingForm)\n  }\n\n  const handleReset = (event) => {\n    event.preventDefault()\n    clearForm()\n    setShowModal(false)\n  }\n\n  // const handleFocus = (event) => {\n  //   console.log(event)\n  // }\n\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n\n  const displayTooltip = (props) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      Add a new transaction\n    </Tooltip>\n  )\n\n  return (\n    <>\n\n      \n      <OverlayTrigger\n        placement=\"left\"\n        delay={{ show: 400, hide: 150 }}\n        overlay={displayTooltip}\n      >\n\n        <Button variant=\"outline-secondary\" onClick={handleShow}>\n          <i className=\"fas fa-plus\"></i>\n        </Button>\n\n      </OverlayTrigger>\n\n      <Modal\n        show={showModal}\n        onHide={handleClose}\n        backdrop=\"static\">\n        <Modal.Header closeButton>\n          <Modal.Title>New Transaction</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <>\n\n\n\n            <div className=\"formDiv transactionForm\">\n              <Container>\n\n                <Form\n                  onSubmit={handleSubmit}\n                >\n\n                  <ToastContainer position=\"middle-center\">\n                    <Toast\n                      style={{\n                        backgroundColor: '#b3ffb3',\n                      }}\n                      onClose={() => setShowToast(false)}\n                      show={showToast}\n                      delay={2000}\n                      autohide>\n                      <Toast.Body>\n                        <strong>Transaction successfully added</strong>\n                      </Toast.Body>\n                    </Toast>\n                  </ToastContainer>\n\n\n                  <Row className=\"mb-3 pt-3\">\n\n                    <Form.Group as={Col} controlId=\"TransactionType\">\n                      <Form.Label>Transaction Type</Form.Label>\n                      <Form.Select\n                        name=\"transaction_type\"\n                        // initialValue=\"Select Transaction Type\"\n                        defaultValue=\"Outgoing\"\n                        required\n                        onChange={handleChange}\n                      >\n                        {/* <option disabled>Select Transaction Type</option> */}\n                        {transactionTypes.map((item, index) => {\n                          return <option key={index}>{item}</option>\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n\n\n                    <Form.Group as={Col} controlId=\"Amount\">\n                      <Form.Label>Transaction Amount</Form.Label>\n                      <Form.Control\n                        name=\"amount\"\n                        type=\"number\"\n                        placeholder=\"£\"\n                        required\n                        value={formData.amount}\n                        onChange={handleChange}\n\n\n                      />\n                    </Form.Group>\n\n                  </Row>\n\n                  <div className=\"mb-3 dateFieldContainer\">\n                    <Form.Group controlId=\"TransactionDate\">\n                      <Form.Label>Transaction Date</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"transaction_date\"\n                        placeholder=\"Select a date\"\n                        onChange={handleChange}\n                        required\n                      />\n                    </Form.Group>\n                  </div>\n\n                  <Form.Group className=\"mb-3\" controlId=\"recipient_sender\">\n                    <Form.Label>{formData.transaction_type !== 'Incoming' ? 'Recipient' : 'Sender'}</Form.Label>\n                    <Form.Control\n                      name=\"recipient_sender\"\n                      type=\"text\"\n                      value={formData.recipient_sender}\n                      placeholder={formData.transaction_type !== 'Outgoing' ? 'Who sent you money?' : 'Who are you paying?'}\n                      required\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n\n                  {/* \n            <Form.Group className=\"mb-3\" controlId=\"recipient_sender\">\n              <Form.Label>{formData.transaction_type !== 'Incoming' ? 'Recipient' : 'Sender'}</Form.Label>\n            \n              <Typeahead\n                id=\"recipient_sender\"\n                name=\"recipient_sender\"\n                allowNew\n                newSelectionPrefix=\"Add a new contact? \"\n                options={[]}\n                onChange={handleChange}\n                onFocus={handleFocus}\n                value={formData.recipient_sender}\n                placeholder={formData.transaction_type !== 'Outgoing' ? 'Who sent you money?' : 'Who are you paying?'}\n              />\n            </Form.Group > */}\n\n                  <Form.Group as={Col} controlId=\"labels\" className=\"mb-3\">\n                    <Form.Label>Label</Form.Label>\n                    <Form.Select\n                      name=\"label\"\n                      // initialValue=\"Select Transaction Type\"\n                      defaultValue=\"None\"\n                      required\n                      onChange={handleChange}\n                    >\n                      <option>None</option>\n                      {labels.map((item, index) => {\n                        return <option key={index}>{item}</option>\n                      })}\n                    </Form.Select>\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" controlId=\"description\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                      name=\"description\"\n                      as=\"textarea\"\n                      value={formData.description}\n                      placeholder=\"Enter a description...\"\n                      required\n                      onChange={handleChange}\n                    />\n                  </Form.Group>\n\n                  <Form.Group className=\"mb-3\" id=\"repeatCheckbox\">\n                    <Form.Check\n                      name=\"repeat\"\n                      type=\"checkbox\"\n                      label=\"Recurring Transaction?\"\n                      // value={repeatValue}\n                      // defaultValue={false}\n                      onChange={handleChange}\n                    // checked={false}\n                    // onChange={setRepeatStatus(!repeatStatus)}\n                    />\n                  </Form.Group>\n\n\n                  {formData.repeat === 'true' &&\n\n                    <>\n                      <Row className=\"mb-3\">\n                        <Form.Group as={Col} controlId=\"repeat_frequency\">\n                          <Form.Label>Frequency</Form.Label>\n                          <Form.Select\n                            name=\"repeat_frequency\"\n                            defaultValue=\"Monthly\"\n                            required\n                            onChange={handleChange}\n                          >\n                            {repeatFrequency.map((item, index) => {\n                              return <option key={index}>{item}</option>\n                            })}\n                          </Form.Select>\n                        </Form.Group>\n\n\n                        <Form.Group as={Col} controlId=\"repeatUntilDate\">\n                          <Form.Label>Repeat Until</Form.Label>\n                          <Form.Control\n                            type=\"date\"\n                            name=\"repeat_until\"\n                            placeholder=\"Select a date\"\n                            defaultValue={formData.transaction_date}\n                            onChange={handleChange}\n                          />\n                        </Form.Group>\n\n                      </Row>\n\n\n                    </>\n                  }\n\n\n                  <div className=\"d-grid gap-2 pb-1\">\n                    <Button variant=\"outline-secondary\" onClick={handleReset}\n                    // onClick={cancelNewTransaction}\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n\n                  <div className=\"d-grid gap-2 pb-4\">\n                    <Button variant=\"outline-success\" type=\"submit\">\n                      Add Transaction\n                    </Button>\n                  </div>\n\n                </Form>\n              </Container>\n            </div>\n          </>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default TransactionForm","import React, { useEffect, useState } from 'react'\nimport { Form, Container, Col, Row, Button } from 'react-bootstrap'\nimport { editTransaction } from './auth/helpers/tokenfunctions'\n\nconst EditTransactionForm = ({ transaction, hiddenToggles, rerender }) => {\n\n\n  const transactionTypes = ['Outgoing', 'Incoming']\n\n  const labels = ['Salary', 'Groceries', 'Clothes', 'Beauty', 'Eating Out', 'Refund', 'Other', 'Rent', 'Mortgage', 'Car', 'Transport']\n\n  const repeatFrequency = ['Daily', 'Every Week', 'Every 2 Weeks', 'Every 4 Weeks', 'Monthly', 'Quarterly', 'Annually']\n\n\n  const [formData, setFormData] = useState(null)\n  const [repeatStatus, setRepeatStatus] = useState(transaction.repeat)\n\n  console.log(transaction.repeat)\n  console.log(typeof (transaction.repeat))\n\n\n  useEffect(() => {\n\n    setFormData(transaction)\n\n  }, [transaction])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    editTransaction(transaction.id, formData)\n    setTimeout(() => {\n      rerender()\n      hiddenToggles()\n    }, 300)\n  }\n\n  const handleChange = async (event) => {\n    // console.log('EVENT', event, 'TARGET', event.target)\n\n    if (event.target && event.target.name === 'repeat') {\n      event.target.value = event.target.checked\n      const newRepeatStatus = !repeatStatus\n      setRepeatStatus(newRepeatStatus)\n    }\n\n\n    const newFormData = { ...formData, [event.target.name]: event.target.value }\n    // console.log('FORM DATA', newFormData)\n    setFormData(newFormData)\n  }\n\n\n  // console.log('TRANSACTION TO EDIT')\n\n\n\n\n  return (\n\n    // <Modal\n    //   show={showModal}\n    //   onHide={handleClose}\n    //   backdrop=\"static\">\n    //   <Modal.Header closeButton>\n    //     <Modal.Title>New Transaction</Modal.Title>\n    //   </Modal.Header>\n    //   <Modal.Body>\n    <>\n\n      {formData &&\n\n\n        <Container className=\"editTransactionForm\">\n          <div className=\"formDiv transactionForm\">\n            <Container className=\"editTransactionFormHeading\">\n              <h4>Editing Transaction {formData.id}</h4>\n            </Container>\n            <Form\n              onSubmit={handleSubmit}\n            >\n\n\n              <Row className=\"mb-3 pt-3\">\n\n                <Form.Group as={Col} controlId=\"TransactionType\">\n                  <Form.Label>Transaction Type</Form.Label>\n                  <Form.Select\n                    name=\"transaction_type\"\n                    // initialValue=\"Select Transaction Type\"\n                    defaultValue={formData.transaction_type}\n                    required\n                    onChange={handleChange}\n                  >\n                    {/* <option disabled>Select Transaction Type</option> */}\n                    {transactionTypes.map((item, index) => {\n                      return <option key={index}>{item}</option>\n                    })}\n                  </Form.Select>\n                </Form.Group>\n\n\n                <Form.Group as={Col} controlId=\"Amount\">\n                  <Form.Label>Transaction Amount</Form.Label>\n                  <Form.Control\n                    name=\"amount\"\n                    type=\"number\"\n                    placeholder=\"£\"\n                    required\n                    value={formData.amount}\n                    onChange={handleChange}\n\n\n                  />\n                </Form.Group>\n\n              </Row>\n\n              <div className=\"mb-3 dateFieldContainer\">\n                <Form.Group controlId=\"TransactionDate\">\n                  <Form.Label>Transaction Date</Form.Label>\n                  <Form.Control\n                    type=\"date\"\n                    name=\"transaction_date\"\n                    placeholder=\"Select a date\"\n                    onChange={handleChange}\n                    required\n                  />\n                </Form.Group>\n              </div>\n\n              <Form.Group className=\"mb-3\" controlId=\"recipient_sender\">\n                <Form.Label>{formData.transaction_type !== 'Incoming' ? 'Recipient' : 'Sender'}</Form.Label>\n                <Form.Control\n                  name=\"recipient_sender\"\n                  type=\"text\"\n                  value={formData.recipient_sender}\n                  placeholder={formData.transaction_type !== 'Outgoing' ? 'Who sent you money?' : 'Who are you paying?'}\n                  required\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n\n              <Form.Group as={Col} controlId=\"labels\" className=\"mb-3\">\n                <Form.Label>Label</Form.Label>\n                <Form.Select\n                  name=\"label\"\n                  // initialValue=\"Select Transaction Type\"\n                  defaultValue={formData.label}\n                  required\n                  onChange={handleChange}\n                >\n                  <option>None</option>\n                  {labels.map((item, index) => {\n                    return <option key={index}>{item}</option>\n                  })}\n                </Form.Select>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  name=\"description\"\n                  as=\"textarea\"\n                  value={formData.description}\n                  placeholder=\"Enter a description...\"\n                  required\n                  onChange={handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" id=\"repeatCheckbox\">\n                <Form.Check\n                  name=\"repeat\"\n                  type=\"checkbox\"\n                  label=\"Recurring Transaction?\"\n                  // value={repeatValue}\n                  // defaultValue={false}\n                  onChange={handleChange}\n                  checked={formData.repeat}\n                // onChange={setRepeatStatus(!repeatStatus)}\n                />\n              </Form.Group>\n\n\n              {repeatStatus &&\n\n                <>\n                  <Row className=\"mb-3\">\n                    <Form.Group as={Col} controlId=\"repeat_frequency\">\n                      <Form.Label>Frequency</Form.Label>\n                      <Form.Select\n                        name=\"repeat_frequency\"\n                        defaultValue={formData.repeat_frequency}\n                        required\n                        onChange={handleChange}\n                      >\n                        {repeatFrequency.map((item, index) => {\n                          return <option key={index}>{item}</option>\n                        })}\n                      </Form.Select>\n                    </Form.Group>\n\n\n                    <Form.Group as={Col} controlId=\"repeatUntilDate\">\n                      <Form.Label>Repeat Until</Form.Label>\n                      <Form.Control\n                        type=\"date\"\n                        name=\"repeat_until\"\n                        placeholder=\"Select a date\"\n                        defaultValue={formData.transaction_date}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n\n                  </Row>\n\n\n                </>\n              }\n\n\n              <div className=\"d-grid gap-2 pb-1\">\n                <Button variant=\"outline-secondary\" onClick={hiddenToggles}\n                // onClick={cancelNewTransaction}\n                >\n                  Cancel\n                </Button>\n              </div>\n\n              <div className=\"d-grid gap-2 pb-4\">\n                <Button variant=\"outline-success\" type=\"submit\">\n                  Confirm Changes\n                </Button>\n              </div>\n\n            </Form>\n          </div>\n        </Container>\n      }\n    </>\n    //   </Modal.Body>\n    // </Modal>\n  )\n}\n\nexport default EditTransactionForm","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Modal, Card, ListGroup, ListGroupItem, Container, Row, Col, OverlayTrigger, Popover, Button } from 'react-bootstrap'\nimport { getIndividualTransaction, deleteTransaction, transformDate } from './auth/helpers/tokenfunctions'\nimport EditTransactionForm from './EditTransactionForm'\n\nconst TransactionDetail = ({ handleClose, showTransactionDetail, transactionId, rerender, rerenderToggle }) => {\n\n  const history = useHistory()\n  const location = useLocation()\n\n  const [transaction, setTransaction] = useState(null)\n  const [editHidden, setEditHidden] = useState('hidden')\n  const [cardHidden, setCardHidden] = useState('')\n\n\n  // console.log('ID', transactionId)\n  // console.log('TRANS DETAIL', showTransactionDetail)\n\n  useEffect(() => {\n    const accessTransaction = async () => {\n      const transactionData = await getIndividualTransaction(transactionId)\n      setTransaction(transactionData)\n    }\n    accessTransaction()\n  }, [rerenderToggle, transactionId])\n\n  // transaction && console.log('ID', transaction)\n\n  // const showDeleteToast = () => setToggleHidden(true)\n  // const hideDeleteToast = () => setToggleHidden(false)\n\n\n\n  const hiddenToggles = () => {\n    if (cardHidden === '') {\n      setCardHidden('hidden')\n      setEditHidden('')\n    } else {\n      setCardHidden('')\n      setEditHidden('hidden')\n    }\n  }\n\n  const confirmDelete = () => {\n    deleteTransaction(transaction.id)\n    setTimeout(() => {\n      handleClose()\n      rerender()\n    }, 300)\n    history.push('/dashboard')\n    location.pathname\n    // rerenderToggle\n  }\n\n\n\n\n\n  return (\n\n    <>\n      <Modal\n        show={showTransactionDetail}\n        onHide={handleClose}\n        backdrop=\"static\"\n      >\n\n        {transaction &&\n          <>\n            <div className={editHidden}>\n\n              <EditTransactionForm \n                transaction={transaction} \n                hiddenToggles={hiddenToggles}\n                rerender={rerender}\n              />\n            </div>\n            <Container className={cardHidden}>\n              <Card className=\"transactionCard\">\n\n                <Card.Header as=\"h5\">\n\n                  <Row>\n                    <Col><strong>Transaction ID:</strong> {transaction.id}</Col>\n\n                    <Col xs={2} sm={1}><i className=\"far fa-edit\" onClick={hiddenToggles}></i></Col>\n\n                    <OverlayTrigger\n                      trigger=\"click\"\n                      onHide={() => console.log('HIDE')}\n                      placement=\"left\"\n                      overlay={\n                        <Popover className=\"deletePopover\" id=\"popover-basic\" >\n\n                          <Popover.Header as=\"h3\" className=\"deletePopoverHeader\">Are you sure?</Popover.Header>\n\n                          <Popover.Body className=\"deletePopover\">\n                            {/* <Button variant=\"outline-secondary\">No</Button> */}\n                            <Button\n                              variant=\"outline-danger\"\n                              onClick={confirmDelete}>Yes</Button>\n                          </Popover.Body>\n\n                        </Popover >}\n                    >\n                      <Col xs={2} sm={1}><i className=\"far fa-trash-alt\"></i></Col>\n                    </OverlayTrigger>\n                  </Row>\n\n                </Card.Header>\n\n                <Card.Body>\n\n\n                  <ListGroup className=\"list-group-flush\">\n\n                    {transaction.transaction_type &&\n                      <ListGroupItem><strong>Transaction type:</strong> {transaction.transaction_type}</ListGroupItem>}\n\n                    {transaction.amount &&\n                      <ListGroupItem><strong>Amount:</strong> £{transaction.amount}</ListGroupItem>}\n\n                    {transaction.recipient_sender &&\n                      <ListGroupItem><strong>{transaction.transaction_type === 'Outgoing' ? 'Recipient' : 'Sender'}:</strong> {transaction.recipient_sender}</ListGroupItem>}\n\n                    {transaction.label &&\n                      <ListGroupItem><strong>Label:</strong> {transaction.label}</ListGroupItem>}\n\n                    {transaction.description &&\n                      <ListGroupItem><strong>Description:</strong> {transaction.description}</ListGroupItem>}\n\n                    {transaction.transaction_date &&\n                      <ListGroupItem><strong>Date:</strong> {transformDate(transaction.transaction_date).toDateString()}</ListGroupItem>}\n\n                    {transaction.repeat &&\n                      <ListGroupItem><strong>Repeats {transaction.repeat_frequency}</strong></ListGroupItem>}\n\n                  </ListGroup>\n\n                </Card.Body>\n                <Card.Footer onClick={handleClose}>Done</Card.Footer>\n              </Card>\n\n            </Container>\n          </>\n        }\n\n      </Modal>\n    </>\n  )\n}\n\nexport default TransactionDetail","import React, { useEffect, useState } from 'react'\nimport { Doughnut } from 'react-chartjs-2'\n\n\nconst DoughnutChart = ({ transactions, outgoingTransactionsProps }) => {\n\n  const [labelsArray, setLabelsArray] = useState([])\n\n\n\n\n  useEffect(() => {\n\n    const uniqueValues = []\n\n    const getLabels = () => {\n      outgoingTransactionsProps.map(item => {\n        if (uniqueValues.indexOf(item.label) < 0) {\n          uniqueValues.push(item.label)\n        }\n\n        if (outgoingTransactionsProps.length > 0) {\n          setLabelsArray(uniqueValues)\n        } else {\n          setLabelsArray([])\n        }\n      })\n    }\n\n    getLabels()\n    \n  }, [transactions, outgoingTransactionsProps])\n\n\n\n  const values = []\n\n  labelsArray.map(label => {\n\n    let total = 0\n\n    // console.log('LABEL', label)\n\n    outgoingTransactionsProps.map(item => {\n      if (item.label === label) {\n        // console.log('ITEM', item)\n        // console.log('AMOUNT', item.amount)\n        return (\n          total = total + item.amount\n        )\n      }\n      // console.log('RUNNING TOTAL', total)\n\n    })\n    // console.log('FINAL TOTAL', total)\n    values.push(total)\n  })\n\n  // console.log('VALUES', values)\n\n  const data = {\n\n    labels: labelsArray,\n    datasets: [\n      {\n        data: values,\n\n        backgroundColor: [\n          'rgba(153, 0, 153, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(0, 179, 0, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(204, 0, 0, 1)',\n          'rgba(255, 159, 64, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)'\n        ],\n        borderColor: [\n          'rgba(153, 0, 153, 1)',\n          'rgba(255, 206, 86, 1)',\n          'rgba(0, 179, 0, 1)',\n          'rgba(54, 162, 235, 1)',\n          'rgba(204, 0, 0, 1)',\n          'rgba(255, 159, 64, 1)',\n          'rgba(75, 192, 192, 1)',\n          'rgba(153, 102, 255, 1)'\n        ],\n        borderWidth: 1,\n      }\n    ],\n  }\n\n  const altData = {\n\n    labels: ['No Transactions Yet'],\n    datasets: [\n      {\n        data: [1],\n\n        backgroundColor: [\n          '#bbb'\n        ],\n        borderColor: [\n          // 'rgba(153, 0, 153, 1)'\n        ],\n        borderWidth: 0,\n      }\n    ],\n  }\n\n  return (\n\n    <Doughnut data={outgoingTransactionsProps.length > 0 ? data : altData} />\n\n  )\n\n}\n\nexport default DoughnutChart","import React, { useState, useEffect } from 'react'\nimport TransactionForm from './TransactionForm'\nimport TransactionDetail from './TransactionDetail'\nimport { Button, Container, Table, Col, Row } from 'react-bootstrap'\nimport DoughnutChart from './DoughnutChart'\nimport { transformDate } from './auth/helpers/tokenfunctions'\n\nimport { getCurrentUser } from './auth/helpers/tokenfunctions'\n\n\nconst Dashboard = () => {\n\n\n  const [currentUser, setCurrentUser] = useState(null)\n\n  const [displayMonth, setDisplayMonth] = useState(null)\n  const [displayYear, setDisplayYear] = useState(null)\n\n  const [monthlyTransactions, setMonthlyTransaction] = useState(null)\n  const [monthlyOutgoingTransactions, setMonthlyOutgoingTransaction] = useState(null)\n  const [monthlyIncomingTransactions, setMonthlyIncomingTransaction] = useState(null)\n  const [monthlyIncomingSum, setMonthlyIncomingSum] = useState(null)\n  const [monthlyOutgoingSum, setMonthlyOutgoingSum] = useState(null)\n\n  const [showTransactionDetail, setShowTransactionDetail] = useState(false)\n  const [transactionId, setTransactionId] = useState(null)\n  const [rerenderToggle, setRerenderToggle] = useState(false)\n\n\n  const monthsStr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n\n\n  useEffect(() => {\n\n    const currentDate = new Date()\n\n    const currentMonth = currentDate.getMonth()\n\n    const getCurrentUserData = async () => {\n      const currentUserData = await getCurrentUser()\n\n      setCurrentUser(currentUserData)\n    }\n    getCurrentUserData()\n    setDisplayMonth(currentMonth)\n    setDisplayYear(currentDate.getFullYear())\n\n  }, [rerenderToggle])\n\n\n\n  useEffect(() => {\n    const getMonthlyTransactions = () => {\n\n\n      const filteredMonthTransactions = currentUser.transactions.filter(item => {\n        return transformDate(item.transaction_date).getMonth() === displayMonth && transformDate(item.transaction_date).getFullYear() === displayYear\n      })\n\n      filteredMonthTransactions.sort((a, b) => (transformDate(b.transaction_date).getDate()) - transformDate(a.transaction_date).getDate())\n\n\n      const outgoingTransactions = []\n      const incomingTransactions = []\n\n      filteredMonthTransactions.map(item => {\n        if (item.transaction_type === 'Outgoing') {\n          outgoingTransactions.push(item)\n        } else {\n          incomingTransactions.push(item)\n        }\n      })\n\n      setMonthlyTransaction(filteredMonthTransactions)\n      setMonthlyOutgoingTransaction(outgoingTransactions)\n      setMonthlyIncomingTransaction(incomingTransactions)\n\n    }\n\n    currentUser && getMonthlyTransactions()\n\n  \n  }, [currentUser, displayMonth, displayYear])\n\n\n\n  const getTotals = (variableToMap) => {\n    const sum = variableToMap.reduce((acc, item) => {\n      return acc + item.amount\n    }, 0)\n    return sum\n  }\n\n\n  useEffect(() => {\n\n    if (monthlyTransactions) {\n      setMonthlyOutgoingSum(getTotals(monthlyOutgoingTransactions))\n      setMonthlyIncomingSum(getTotals(monthlyIncomingTransactions))\n    }\n\n  }, [monthlyTransactions, monthlyOutgoingTransactions, monthlyIncomingTransactions])\n\n\n  const toggleLeft = () => {\n    if (displayMonth > 0) {\n      setDisplayMonth(displayMonth - 1)\n    } else {\n      setDisplayMonth(11)\n      setDisplayYear(displayYear - 1)\n    }\n\n  }\n\n\n  const toggleRight = () => {\n    if (displayMonth < 11) {\n      setDisplayMonth(displayMonth + 1)\n    } else {\n      setDisplayMonth(0)\n      setDisplayYear(displayYear + 1)\n    }\n  }\n\n\n\n  const tableRowFill = (index) => {\n    if (index % 2 === 0) {\n      return 'fill'\n    }\n  }\n\n\n  const displayBalance = () => {\n    if (monthlyIncomingSum - monthlyOutgoingSum <= 0) {\n      return `- £${Math.abs(monthlyIncomingSum - monthlyOutgoingSum).toFixed(2)}`\n    } else {\n      return `£${(monthlyIncomingSum - monthlyOutgoingSum).toFixed(2)}`\n    }\n  }\n\n\n  const checkClick = (event) => {\n    console.log('click')\n    const idAsString = event.target.outerHTML.toString().replace('<td value=\"', '').split('\"')[0]\n    const idAsInt = parseInt(idAsString)\n    console.log('ID', idAsInt)\n    setTransactionId(idAsInt)\n    handleShow()\n  }\n  // const hoverCheck = (event) => {\n  //   console.log('hover', event)\n  // }\n\n  // console.log('<<<<ID>>>>', transactionId)\n  const handleClose = () => setShowTransactionDetail(false)\n  const handleShow = () => setShowTransactionDetail(true)\n\n\n  const rerender = () => {\n    setRerenderToggle(!rerenderToggle)\n  }\n\n\n  if (!monthlyTransactions) return null\n\n  return (\n\n    <>\n\n      {currentUser &&\n        <>\n\n          <Container>\n\n            <Row className=\"dashbaordContainerRow\">\n\n              <Col md={12} lg={6}>\n\n                <div className=\"dashboardTableContainer\">\n                  <Container className=\"tableBackground\">\n                    <Row className=\"dashboardHeaderRow\">\n                      <Col className=\"addTransactionButtonCol\"></Col>\n                      <Col xs={9} className=\"dashboardHeading\">\n                        {/* <h2>{currentUser.first_name} {currentUser.last_name}</h2> */}\n                        <h2>Monthly Balance</h2>\n\n                        <h2>{displayBalance()}</h2>\n                      </Col>\n\n                      <Col className=\"addTransactionButtonCol\">\n                        <TransactionForm\n                          // {...currentUser} \n                          rerender={rerender}\n                        />\n                      </Col>\n                    </Row>\n\n                    <Container className=\"monthYearToggle\">\n                      {/* <Row> */}\n                      <Button\n                        variant=\"secondary\"\n                        className=\"togglButton leftButton\"\n                        onClick={toggleLeft}>\n                        <i className=\"fas fa-caret-left fa-2x\"></i>\n                      </Button>\n\n                      <div className=\"monthYear\">\n\n                        {/* <h2>{monthsStr[displayMonth][0]}{monthsStr[displayMonth][1]}{monthsStr[displayMonth][2]} {displayYear}</h2> */}\n                        <h2>{monthsStr[displayMonth]} {displayYear}</h2>\n\n                      </div>\n\n                      <Button\n                        variant=\"secondary\"\n                        className=\"togglButton rightButton\"\n                        onClick={toggleRight}>\n                        <i className=\"fas fa-caret-right fa-2x\"></i>\n                      </Button>\n                      {/* </Row> */}\n                    </Container>\n\n\n\n                    {/* <div className=\"formDiv\"> */}\n\n                    <Table bordered responsive hover>\n\n                      <thead>\n                        <tr>\n                          {/* <th></th> */}\n                          <th md=\"auto\">Date</th>\n                          <th md=\"auto\">Amount</th>\n                          <th md=\"auto\">From/To</th>\n                          <th md=\"auto\">In/Out</th>\n                          <th md=\"auto\">Label</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {monthlyTransactions.length < 1 ? <tr>\n                          <td colSpan={6}>No transaction yet.</td>\n                        </tr>\n                          :\n                          monthlyTransactions.map((item, index) => {\n                            return (\n\n                              <tr key={index} className={tableRowFill(index)} onClick={checkClick}>\n                                {/* <td><i className=\"far fa-edit\"></i></td> */}\n                                <td value={item.id}>{transformDate(item.transaction_date).getDate()}</td>\n                                {/* <td>{item.transaction_date}</td> */}\n\n                                {item.transaction_type === 'Incoming' ?\n                                  <td value={item.id} className=\"credit\">£{item.amount}</td>\n                                  :\n                                  <td value={item.id} className>-£{item.amount}</td>\n                                }\n\n                                <td value={item.id}>{item.recipient_sender}</td>\n                                <td value={item.id}>{item.transaction_type}</td>\n                                <td value={item.id}>{item.label}</td>\n\n                              </tr>\n\n                            )\n                          })\n\n                        }\n                      </tbody>\n                    </Table>\n\n                  </Container>\n                </div>\n              </Col>\n\n              <Col md={12} lg={6}>\n\n                <Container className=\"doughnutContainer\">\n\n                  <h2>Spending Breakdown</h2>\n\n                  <DoughnutChart\n                    transactions={monthlyTransactions}\n                    outgoingTransactionsProps={monthlyOutgoingTransactions} />\n\n\n                </Container>\n\n              </Col>\n            </Row>\n          </Container>\n          {showTransactionDetail && <TransactionDetail\n            handleClose={handleClose}\n            showTransactionDetail={showTransactionDetail}\n            transactionId={transactionId}\n            rerender={rerender}\n            rerenderToggle={rerenderToggle}\n          />\n          }\n          {/* </div> */}\n\n        </>\n      }\n    </>\n\n  )\n}\nexport default Dashboard","export default __webpack_public_path__ + \"static/media/dashboardScreenshot.2145ef6b.png\";","/* eslint-disable react/no-unescaped-entities */\nimport React from 'react'\nimport { Container, Card, Col, Row } from 'react-bootstrap'\nimport dashboardScreenshot from '../images/dashboardScreenshot.png'\nimport Register from './auth/Register'\n\nconst Home = () => {\n\n\n  const screenshot = dashboardScreenshot\n\n  \n\n  return (\n\n    <Container className=\"homeAlignment\">\n\n      <Row>\n\n\n        <Col sm={10} lg={7}>\n          <Card className=\"screenshotCard\">\n            <Card.Header as=\"h2\">Need a budgeting App?</Card.Header>\n            <Card.Body>\n              <Card.Img variant=\"top\" src={screenshot} alt=\"dashboard screenshot\" />\n              <Card.Title as=\"h4\">Keeping track of your finances is the first step to financial freedom</Card.Title>\n              <Card.Text>\n                So sign up and let's Buh Jit!\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col sm={7} lg={5}>\n\n          <Register />\n        </Col>\n\n\n      </Row>\n    </Container>\n\n  )\n}\nexport default Home","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport NavbarComponent from './components/Navbar'\nimport Profile from './components/auth/Profile'\nimport Register from './components/auth/Register'\nimport Dashboard from './components/Dashboard'\nimport TransactionForm from './components/TransactionForm'\nimport Home from './components/Home'\n\nconst App = () => {\n\n  // useEffect(() => {\n  //   const getData = async () => {\n  //     const { data } = await axios('/api/household/1') // * <-- replace with your endpoint\n  //     // const data = await res.json()\n  //     console.log(data)\n  //   }\n  //   getData()\n  // }, [])\n\n  return (\n    <>\n\n\n      <BrowserRouter>\n\n        <NavbarComponent />\n\n        \n        <Switch>\n\n\n          <Route path='/dashboard1'>\n            <Dashboard />\n          </Route>\n          \n          <Route path='/dashboard'>\n            <Dashboard />\n          </Route>\n\n          <Route path='/transaction'>\n            <TransactionForm />\n          </Route>\n\n          <Route path='/register'>\n            <Register />\n          </Route>\n\n\n          <Route path='/profile'>\n            <Profile />\n          </Route>\n\n\n          <Route path='/'>\n            <Home />\n          </Route>\n\n\n        </Switch>\n\n      </BrowserRouter>\n\n\n    </>\n  )\n\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}